{"mappings":"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","sources":["src/index.js","src/js/modal-card-film/modal.js","src/js/pagination.js"],"sourcesContent":["import './js/utils/handlebars-helpers';\n\nimport './js/footer_modal';\n// import { localStorageFilms } from \nimport './js/modal-card-film/modal';\nimport './js/utils/set-genres-to-localstorage';\nimport './js/pagination'\n","const refs = {\n  body: document.body,\n  openBtn: document.querySelector('button[data-modal-open]'),\n  closeBtn: document.querySelector('button[data-modal-close]'),\n  backdrop: document.querySelector('div[data-modal]'),\n};\n\nrefs.openBtn.addEventListener('click', onOpenBtnClick);\nfunction onOpenBtnClick() {\n  refs.backdrop.classList.remove('is-hidden');\n}\n\nrefs.closeBtn.addEventListener('click', onCloseBtnClick);\nfunction onCloseBtnClick() {\n  refs.backdrop.classList.add('is-hidden');\n}\n","const pageNumbers = (total, max, current) => {\n  const half = Math.floor(max / 2);\n  let to = max;\n  \n  if(current + half >= total) {\n    to = total;\n  } else if(current > half) {\n    to = current + half ;\n  }\n  \n  let from = Math.max(to - max, 0);\n\n  return Array.from({length: Math.min(total, max)}, (_, i) => (i + 1) + from);\n}\n\nfunction PaginationButton(totalPages, maxPagesVisible = 10, currentPage = 1) {\n  let pages = pageNumbers(totalPages, maxPagesVisible, currentPage);\n  let currentPageBtn = null;\n  const buttons = new Map();\n  const disabled = {\n    start: () => currentPage === 1 || currentPage > totalPages,\n    prev: () => pages[0] === 1,\n    end: () => currentPage >= totalPages,\n    next: () => pages.slice(-1)[0] === totalPages\n  }\n  const frag = document.createDocumentFragment();\n  const paginationButtonContainer = document.createElement('div');\n  paginationButtonContainer.className = 'pagination-buttons';\n  \n  const createAndSetupButton = (label = '', cls = '', disabled = false, handleClick) => {\n    const buttonElement = document.createElement('button');\n    buttonElement.textContent = label;\n    buttonElement.className = `page-btn ${cls}`;\n    buttonElement.disabled = disabled;\n    buttonElement.addEventListener('click', e => {\n      handleClick(e);\n      this.update();\n      paginationButtonContainer.value = currentPage;\n      paginationButtonContainer.dispatchEvent(new CustomEvent('change', {detail: {currentPageBtn}}));\n    });\n    \n    return buttonElement;\n  }\n  \n  const onPageButtonClick = e => currentPage = Number(e.currentTarget.textContent);\n  \n  const onPageButtonUpdate = index => (btn) => {\n    btn.textContent = pages[index];\n    \n    if(pages[index] === currentPage) {\n      currentPageBtn.classList.remove('active');\n      btn.classList.add('active');\n      currentPageBtn = btn;\n      currentPageBtn.focus();\n    }\n  };\n  \n  buttons.set(\n    createAndSetupButton('', 'start-page', disabled.start(), () => currentPage = 1),\n    (btn) => btn.disabled = disabled.start()\n  )\n  \n  buttons.set(\n    createAndSetupButton('', 'prev-page', disabled.prev(), () => currentPage -= 1),\n    (btn) => btn.disabled = disabled.prev()\n  \n  )\n  \n  pages.map((pageNumber, index) => {\n    const isCurrentPage = currentPage === pageNumber;\n    const button = createAndSetupButton(\n      pageNumber, isCurrentPage ? 'active' : '', false, onPageButtonClick\n    );\n    \n    if(isCurrentPage) {\n      currentPageBtn = button;\n    }\n    \n    buttons.set(button, onPageButtonUpdate(index));\n  });\n  \n  buttons.set(\n    createAndSetupButton('', 'next-page', disabled.next(), () => currentPage += 1),\n    (btn) => btn.disabled = disabled.next()\n  )\n  \n  buttons.set(\n    createAndSetupButton('', 'end-page', disabled.end(), () => currentPage = totalPages),\n    (btn) => btn.disabled = disabled.end()\n  )\n  \n  buttons.forEach((_, btn) => frag.appendChild(btn));\n  paginationButtonContainer.appendChild(frag);\n  \n  this.render = (container = document.body) => {\n    container.appendChild(paginationButtonContainer);\n  }\n  \n  this.update = (newPageNumber = currentPage) => {\n    currentPage = newPageNumber;\n    pages = pageNumbers(totalPages, maxPagesVisible, currentPage);\n    buttons.forEach((updateButton, btn) => updateButton(btn));\n  }\n  \n  this.onChange = (handler) => {\n    paginationButtonContainer.addEventListener('change', handler);\n  }\n}\n\nconst paginationButtons = new PaginationButton(10, 5);\n\npaginationButtons.render();\n\npaginationButtons.onChange(e => {\n  console.log('-- changed', e.target.value)\n});\n"],"names":["parcelRequire","$9bfdd1e09219f1d3$var$refs","body","document","openBtn","querySelector","closeBtn","backdrop","addEventListener","classList","remove","add","$1bab9c519cfa82bc$var$pageNumbers","total","max","current","half","Math","floor","to","from","Array","length","min","_","i","$1bab9c519cfa82bc$var$paginationButtons","totalPages","maxPagesVisible","currentPage","pages","currentPageBtn","buttons","Map","disabled1","slice","frag","createDocumentFragment","paginationButtonContainer","createElement","className","createAndSetupButton","label","cls","disabled","handleClick","buttonElement","textContent","e","this","update","value","dispatchEvent","CustomEvent","detail","onPageButtonClick","Number","currentTarget","set","btn","map","pageNumber","index","isCurrentPage","button","focus","onPageButtonUpdate","forEach","appendChild","render","container","newPageNumber","updateButton","onChange","handler","console","log","target"],"version":3,"file":"index.687251fa.js.map"}