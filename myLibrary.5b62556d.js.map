{"mappings":"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","sources":["src/js/my-library-create-murkup.js","src/js/modal-card-film/modal-library.js"],"sourcesContent":["import { getGenresName } from './utils/get-genres-name';\nimport { sliceGenres } from './utils/slice-genres';\nimport { addBackToTop } from 'vanilla-back-to-top';\n\nexport const queueBTN = document.querySelector('.queue-btn');\nconst watchedBTN = document.querySelector('.watched-btn');\nconst myLibraryList = document.querySelector('.mylibrary__list');\nconst myLibrary = document.querySelector('.mylibrary');\nconst messageWithoutMovies = document.querySelector('.no-list');\n\nfunction onLoadPage() {\n  clearPage();\n  queueBTN.classList.add('inactive-btn');\n  queueBTN.classList.remove('active-btn');\n  watchedBTN.classList.add('active-btn');\n  watchedBTN.classList.remove('inactive-btn');\n  myLibrary.style.height = 'auto';\n  myLibraryList.insertAdjacentHTML('beforeend', createMarkupWatched());\n}\n\nfunction onWatchedClick() {\n  clearPage();\n  queueBTN.classList.add('inactive-btn');\n  queueBTN.classList.remove('active-btn');\n  watchedBTN.classList.add('active-btn');\n  watchedBTN.classList.remove('inactive-btn');\n  myLibrary.style.height = 'auto';\n  myLibraryList.insertAdjacentHTML('beforeend', createMarkupWatched());\n}\n\nfunction onQueueClick() {\n  clearPage();\n  queueBTN.classList.add('active-btn');\n  queueBTN.classList.remove('inactive-btn');\n  watchedBTN.classList.add('inactive-btn');\n  watchedBTN.classList.remove('active-btn');\n  myLibrary.style.height = 'auto';\n  myLibraryList.insertAdjacentHTML('beforeend', createMarkupQueue());\n}\n\nwatchedBTN.addEventListener('click', onWatchedClick);\nqueueBTN.addEventListener('click', onQueueClick);\n\nonLoadPage();\n\nexport function clearPage() {\n  myLibraryList.innerHTML = '';\n}\n\nexport function createMarkupWatched() {\n  const watchedMovies = JSON.parse(localStorage.getItem('watched'));\n  if (!watchedMovies || watchedMovies.length === 0) {\n    myLibraryList.classList.add('visually-hidden');\n    messageWithoutMovies.classList.remove('visually-hidden');\n    myLibrary.style.height = '100vh';\n    return;\n  }\n  if (watchedMovies) {\n    myLibraryList.classList.remove('visually-hidden');\n    messageWithoutMovies.classList.add('visually-hidden');\n  }\n  return watchedMovies\n    .map(\n      ({\n        poster_path,\n        original_title,\n        genres,\n        release_date,\n        vote_average,\n        id,\n      }) => {\n        const releaseYear = release_date.substring(0, 4);\n        const vote = Number(vote_average).toFixed(1);\n        // const genres = getGenresName(genre_ids);\n        const genresArr = [];\n        genres.map(genre => genresArr.push(genre.name));\n        const slicedGenres = sliceGenres(genresArr);\n        const BASE_PICTURE_URL = 'https://image.tmdb.org/t/p/original';\n        let posterLink = `${BASE_PICTURE_URL}${poster_path}`;\n        if (poster_path === null) {\n          posterLink = 'https://i.postimg.cc/zG4yJ7P4/No-Image-Available.jpg';\n        }\n        return `<li class=\"mylibrary__item\" data-id=${id}>\n            <div class=\"mylibrary__item-wrapper js-modal-trigger\">\n                <img\n                class=\"mylibrary__item-img\"\n                src=\"${posterLink}\"\n                alt=\"${original_title}\"\n                loading=lazy\n            />\n            <h2 class=\"mylibrary__item-title js-modal-trigger\">${original_title}</h2>\n            <div class=\"mylibrary__item-text-wrapper js-modal-trigger\">\n                <p class=\"mylibrary__item-genres\">${slicedGenres.join(', ')}</p>\n                <p class=\"mylibrary__item-text-separator\">|</p>\n                <p class=\"mylibrary__item-release-arye\">${releaseYear}</p>\n                <div class=\"reting-wrapper\">\n                    <p class=\"mylibrary__item-reting\">${vote}</p>\n                </div>\n            </div>\n            </div>\n        </li>`;\n      }\n    )\n    .join('');\n}\n\nexport function createMarkupQueue() {\n  const queueMovies = JSON.parse(localStorage.getItem('queue'));\n  if (!queueMovies || queueMovies.length === 0) {\n    myLibraryList.classList.add('visually-hidden');\n    messageWithoutMovies.classList.remove('visually-hidden');\n    myLibrary.style.height = '100vh';\n    return;\n  }\n  if (queueMovies) {\n    myLibraryList.classList.remove('visually-hidden');\n    messageWithoutMovies.classList.add('visually-hidden');\n  }\n  if (queueMovies.length > 9) {\n    cutMovies = queueMovies.slice(0, 9);\n    createLibraryMarkup(cutMovies);\n    return;\n  }\n  return createLibraryMarkup(queueMovies);\n}\n\nexport function createLibraryMarkup(movies) {\n  return movies\n    .map(\n      ({\n        poster_path,\n        original_title,\n        genres,\n        release_date,\n        vote_average,\n        id,\n      }) => {\n        const releaseYear = release_date.substring(0, 4);\n        const vote = Number(vote_average).toFixed(1);\n        // const genres = getGenresName(genre_ids);\n        const genresArr = [];\n        genres.map(genre => genresArr.push(genre.name));\n        const slicedGenres = sliceGenres(genresArr);\n        const BASE_PICTURE_URL = 'https://image.tmdb.org/t/p/original';\n        let posterLink = `${BASE_PICTURE_URL}${poster_path}`;\n        if (poster_path === null) {\n          posterLink = 'https://i.postimg.cc/zG4yJ7P4/No-Image-Available.jpg';\n        }\n        return `<li class=\"mylibrary__item\" data-id=${id}>\n            <div class=\"mylibrary__item-wrapper js-modal-trigger\">\n                <img\n                class=\"mylibrary__item-img\"\n                src=\"${posterLink}\"\n                alt=\"${original_title}\"\n                loading=lazy\n            />\n            <h2 class=\"mylibrary__item-title js-modal-trigger\">${original_title}</h2>\n            <div class=\"mylibrary__item-text-wrapper js-modal-trigger\">\n                <p class=\"mylibrary__item-genres\">${slicedGenres.join(', ')}</p>\n                <p class=\"mylibrary__item-text-separator\">|</p>\n                <p class=\"mylibrary__item-release-arye\">${releaseYear}</p>\n                <div class=\"reting-wrapper\">\n                    <p class=\"mylibrary__item-reting\">${vote}</p>\n                </div>\n            </div>\n            </div>\n        </li>`;\n      }\n    )\n    .join('');\n}\n\naddBackToTop({\n  diameter: 45,\n  backgroundColor: 'transparent',\n  textColor: '#e5882c',\n});\n","import ApiService from '../ApiService';\nimport { LINE_KEY } from './add-to-queue';\nimport { WATCHED_KEY } from './add-to-watched';\nimport { films } from './random-films';\nimport { localStore } from '../utils/loc-storage';\nimport {\n  onFilmCardClick,\n  onCloseBtnClick,\n  saveKeysToStorage,\n  addBtnsListeners,\n  onEscClick,\n  onBackdropClick,\n} from './modal-open-close';\nimport { refs } from './modal-refs';\nimport { onWatchedClick } from './add-to-watched';\nimport { checkSavedFilms, checkWatchedFilms } from './check-saved-films';\nimport { markup, addMarkupToCard } from './render-film';\n\nrefs.library.addEventListener('click', onFilmCardClick);"],"names":["parcelRequire","$b3b5d7234df0b74d$export$d0b68962da55209e","document","querySelector","$b3b5d7234df0b74d$var$watchedBTN","$b3b5d7234df0b74d$var$myLibraryList","$b3b5d7234df0b74d$var$myLibrary","$b3b5d7234df0b74d$var$messageWithoutMovies","$b3b5d7234df0b74d$export$6ea5325823156677","innerHTML","$b3b5d7234df0b74d$export$468ab06cffb7518b","watchedMovies","JSON","parse","localStorage","getItem","length","classList","remove","add","map","param","poster_path","original_title","genres","release_date","vote_average","id","releaseYear","substring","vote","Number","toFixed","genresArr","genre","push","name","slicedGenres","$8wgAC","sliceGenres","posterLink","concat","join","style","height","$b3b5d7234df0b74d$export$cf41565f85ca117a","movies","addEventListener","insertAdjacentHTML","queueMovies","cutMovies","slice","$b3b5d7234df0b74d$export$58463d086bd3149d","$8RZ1j","addBackToTop","diameter","backgroundColor","textColor","$84aGp","refs","library","$iSUmJ","onFilmCardClick"],"version":3,"file":"myLibrary.5b62556d.js.map"}